@startuml
'https://plantuml.com/sequence-diagram

package moteurJeu {
interface DessinJeu{
+ dessinerJeu(jeu:Jeu, canvas:Canvas)
}

interface Jeu{
+update(secondes : double, clavier : Clavier)
+init()
+etreFini() : boolean
}
}

package gameLaby.laby {
class LabyDessin{
- <static> TAILLE_CASE : double
+ dessinerJeu(jeu:Jeu, canvas:Canvas)
}
DessinJeu <.. LabyDessin

class LabyJeu{
+LabyJeu()
+update(secondes : double, clavier : Clavier)
+init()
+etreFini() : boolean
+etrePerdu() : boolean
+getLaby() : Labyrinthe
}
Jeu <.. LabyJeu
LabyJeu "1" -> "1" Labyrinthe: -laby

class Perso{
+ x:int
+ y:int
+ pv:int
+ Perso(dx:int, dy:int)
+ etrePresent(dx:int, dy:int) : boolean
+ getX() : int
+ getY() : int
+ getPV() : int
+ setPV(ajout:int)
}

class Labyrinthe{
+ <static> MUR : char
+ <static> PJ : char
+ <static> VIDE : char
+ <static> MONSTRE : char
+ <static> AMULETTE : char
+ <static> HAUT : string
+ <static> BAS : string
+ <static> GAUCHE : string
+ <static> DROITE : string
+ murs : boolean[][]
+ amuletteTrouvee : boolean
+ depart : int[]
+ getSuivant(x : int, y : int, String : action) : int[]
+ Labyrinthe(nom : String)
+ deplacerPerso(action : String)
+ etreFini() : boolean
+ etrePerdu() : boolean
+ getLengthY() : int
+ getLength() : int
+ getMur(x : int, y : int) : boolean
+ deplacerMonstre()
+ getMonstre(x : int, y : int) : boolean
}
Labyrinthe "1" -> "1" Perso : +pj
Labyrinthe "1" -> "1" Monstre : +monstre
Labyrinthe "1" -> "1" Amulette : +amulette

class MainLaby{
- <static> main(args : String[])
}
MainLaby -> LabyDessin : create
MainLaby -> LabyJeu : create

class Monstre{
+ x:int
+ y:int
+ Monstre(dx:int,dy:int)
+ etrePresent(dx:int,dy:int) : boolean
+ getX() : int
+ getY() : int
+ attaquer(p:Perso)
}

class Amulette{
+ x:int
+ y:int
+ Amulette(x:int,y:int)
+ etrePresent(dx:int,dy:int) : boolean
+ getX() : int
+ getY() : int
}
}
@enduml